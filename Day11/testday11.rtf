{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 LucidaGrande;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red235\green235\blue235;}
\margl1440\margr1440\vieww25460\viewh19760\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 Day11\
ex00\

\b0 #include <stdlib.h>\
#include <unistd.h>\
#include "ft_list.h"\
\
int ft_putstr(char *str)\
\{\
	int index;\
\
	index = 0;\
	while(str[index] != '\\0')\
	\{\
		write(1,&str[index],1);\
		index++;\
	\}\
	return(0);\
\}\
\
t_list	*ft_create_elem(void *data)\
\{\
	t_list	*tmp;\
	tmp = malloc(sizeof(t_list));\
	if (tmp)\
	\{\
		tmp->data = data;\
		tmp->next = NULL;\
	\}\
	return (tmp);\
\}\
\
int main ()\
\{\
  t_list *list;\
  list = NULL;\
  ft_create_elem("");\
	while(list)\
	\{\
    		ft_putstr("main01\\n");\
	//	ft_putstr(list->data);\
		list = list->next;\
	\}\
  return (0);\
\}\
\
\

\b ex02\

\b0 #include <stdio.h>\
#include "ft_list.h"\
\
t_list	*ft_create_elem(void *data);\
\
void ft_list_push_front(t_list **begin_list, void *data)\
\{\
	t_list	*list;\
\
	if (*begin_list)\
	\{\
		list = ft_create_elem(data);\
		list->next = *begin_list;\
		*begin_list = list;\
		printf("FRIST \\n");\
\
	\}\
  else\
	\{\
		printf("ELSE \\n");\
		*begin_list = ft_create_elem(data);\
	\}\
\}\
\
int main ()\
\{\
  t_list *list;\
  list = NULL;\
	ft_list_push_front(&list,"");\
	ft_list_push_front(&list,"");\
	while(list)\
	\{\
    printf("loop \\n");\
		list = list->next;\
	\}\
  return (0);\
\}\
\

\b ex03\

\b0 #include <stdio.h>\
#include "ft_list.h"\
\
t_list	*ft_create_elem(void *data);\
\
int	ft_list_size(t_list *begin_list)\
\{\
	t_list	*list;\
	int		i;\
\
	i = 0;\
	list = begin_list;\
	while (list)\
	\{\
		i++;\
		list = list->next;\
	\}\
	return (i);\
\}\
\
int main ()\
\{\
  t_list *list;\
  list = NULL;\
	ft_list_push_front(&list,"");\
	ft_list_push_front(&list,"");\
	ft_list_push_front(&list,"");\
	\
	printf("TOTAL %i\\n",ft_list_size(list));\
\
  return (0);\
\}\
\

\b ex04\

\b0 #include <stdio.h>\
#include "ft_list.h"\
\
t_list	*ft_list_last(t_list *begin_list)\
\{\
	t_list	*list;\
\
	list = begin_list;\
	if (list)\
	\{\
		while (list->next)\
			list = list->next;\
		return (list);\
	\}\
	return (list);\
\}\
\
void	ft_list_push_front(t_list **begin_list, void *data);\
\
int main ()\
\{\
  t_list *list;\
	t_list *list2;\
\
  list = NULL;\
	ft_list_push_front(&list,"1");\
	ft_list_push_front(&list,"2");\
	ft_list_push_front(&list,"3");\
\
	list2 = ft_list_last(list);\
\
	printf("LAST : %s\\n",list2->data);\
\
  return (0);\
\}\
\
\

\b ex05\

\b0 \
int main (int argn, char *argv[])\
\{\
  t_list *list;\
\
  list = NULL;\
	list = ft_list_push_params(argn,argv);\
\
	while(list)\
	\{\
		printf("PRINT : %s\\n",list->data);\
		list = list->next;\
	\}\
\
  return (0);\
\}\
\

\b\fs36 ex06
\b0\fs24 \

\fs28 \
int main (int argn, char *argv[])\
\{\
  t_list *list;\
	t_list *first;\
\
  list = NULL;\
	first= list = ft_list_push_params(argn,argv);\
\
	while(list)\
	\{\
		printf("PRINT : %s\\n",list->data);\
		list = list->next;\
	\}\
\
	ft_list_clear(&first);\
\
	while(first)\
	\{\
		printf("PRINT2 : %s\\n",first->data);\
		first = first->next;\
	\}\
\
\
  return (0);\
\}
\fs24 \
\

\b\fs36 ex07\

\b0\fs28 \
int main (int argn, char *argv[])\
\{\
  t_list *list;\
	t_list *first;\
\
  list = NULL;\
	first= list = ft_list_push_params(argn,argv);\
\
	while(list)\
	\{\
		printf("PRINT : %s\\n",list->data);\
		list = list->next;\
	\}\
\
	first = ft_list_at(first, 4);\
\
	if(first)\
	\{\
		printf("PRINT2 : %s\\n",first->data);\
	\}\
\
\
  return (0);\
\}\
\
\

\b\fs36 ex08\

\b0\fs28 \
int main (int argn, char *argv[])\
\{\
  t_list *list;\
	t_list *first;\
\
  list = NULL;\
	first= list = ft_list_push_params(argn,argv);\
\
	while(list)\
	\{\
		printf("PRINT : %s\\n",list->data);\
		list = list->next;\
	\}\
\
	ft_list_reverse(&first);\
\
	while(first)\
	\{\
		printf("PRINT2 : %s\\n",first->data);\
		first = first->next;\
	\}\
\
\
  return (0);\
\}\
\
\

\b\fs36 ex09\

\b0\fs28 \
void	ft_list_push_front(t_list **begin_list, void *data);\
\
void	func(void *data)\
\{\
	printf("%s\\n",(char*)data );\
\}\
\
int main ()\
\{\
  t_list *list;\
\
  list = NULL;\
	ft_list_push_front(&list,"5");\
	ft_list_push_front(&list,"2");\
	ft_list_push_front(&list,"3");\
\
	ft_list_foreach(list,&func );\
\
  return (0);\
\}\
\

\b\fs36 ex10\

\b0\fs28 \
#include <stdio.h>\
#include <string.h>\
#include <stdlib.h>\
#include "ft_list.h"\
#include <unistd.h>\
\
t_list	*ft_create_elem(void *data);\
void	ft_list_foreach_if(\
		t_list *begin_list,\
		void (*f)( void *),\
		void *data_ref,\
		int (*cmp)()\
		);\
\
int ft_putstr(char *str)\
\{\
	int index;\
\
	index = 0;\
	while(str[index] != '\\0')\
	\{\
		write(1,&str[index],1);\
		index++;\
	\}\
	write(1,"\\n",1);\
	return(0);\
\}\
\
void print_list(t_list *list)\
\{\
	while(list)\
	\{\
		ft_putstr(list->data);\
		list = list->next;\
	\}\
\}\
\
void	func(void *data)\
\{\
	printf("[x]");\
	((char*)data)[1] = ((char*)data)[0];\
\}\
\
int		main(void)\
\{\
	t_list	*list;\
	char	str1[]="test1";\
	char	str2[]="test2";\
	char	str3[]="test2";\
	char	str4[]="test4";\
	char	*data_ref="test2";\
\
	list = ft_create_elem(str1);\
	list->next = ft_create_elem(str2);\
	list->next->next = ft_create_elem(str3);\
	list->next->next->next = ft_create_elem(str4);\
\
	print_list(list);\
	ft_list_foreach_if(list, &func, data_ref, &strcmp);\
	print_list(list);\
	return 0;\
\}\
\

\b\fs36 ex11
\b0\fs28 \
\
\pard\pardeftab720\sl300\partightenfactor0

\f1\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 #include <stdio.h>\
#include <string.h>\
#include <stdlib.h>\
#include "ft_list.h"\
\
t_list	*ft_create_elem(void *data);\
\
void ft_print_list(t_list *list)\
\{\
	while(list)\
	\{\
		printf("%s\\n",(list->data));\
		list = list->next;\
	\}\
\}\
\
t_list *ft_list_find(\
		t_list *begin_list,\
		void *data_ref,\
		int (*cmp)());\
\
int		main(void)\
\{\
	t_list	*list;\
	char	str1[]="test1";\
	char	str2[]="test2";\
	char	str3[]="test3";\
	char	str4[]="test4";\
	char	*data_ref="test2";\
\
	list = ft_create_elem(str1);\
	list->next = ft_create_elem(str2);\
	list->next->next = ft_create_elem(str3);\
	list->next->next->next = ft_create_elem(str4);\
\
	ft_print_list(list);\
	printf("---\\n");\
	list = ft_list_find(list, data_ref, &strcmp);\
	if(list)\
		printf("%s\\n",list->data);\
	else\
		printf("NULL list_ptr\\n");\
	return 0;\
\}}